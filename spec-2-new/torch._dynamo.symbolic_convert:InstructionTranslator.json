{
    "summary": "\nThe `should_compile_partial_graph` function determines whether Dynamo should compile a partial subgraph when encountering unsupported operations. The vulnerable line checks that all active context managers can be restored before allowing partial compilation, but fails to validate the `one_graph` flag which enforces full graph compilation. This could lead to incorrect behavior when `one_graph=True` but partial compilation is attempted.\n\nThe `create_call_resume_at` function handles creating continuation functions for graph breaks. The vulnerable line installs global variables without proper validation, which could potentially be exploited to modify global state in unsafe ways.\n```\n\n```python\nimport torch\nimport torch.nn as nn\n\nclass PartialGraphModule(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.linear = nn.Linear(10, 10)\n    \n    def forward(self, x):\n        # This will trigger partial graph compilation\n        if x.sum() > 0:  # Data-dependent control flow\n            return self.linear(x)\n        return x\n\nmodel = PartialGraphModule()\ncompiled_model = torch.compile(model, fullgraph=True)  # one_graph=True\ninput = torch.randn(10)\noutput = compiled_model(input)  # Potential issue if partial compilation occurs\n```\n\n```yaml\n- nn.Linear\n- torch.compile\n",
    "python_code": "\nimport torch\nimport torch.nn as nn\n\nclass PartialGraphModule(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.linear = nn.Linear(10, 10)\n    \n    def forward(self, x):\n        # This will trigger partial graph compilation\n        if x.sum() > 0:  # Data-dependent control flow\n            return self.linear(x)\n        return x\n\nmodel = PartialGraphModule()\ncompiled_model = torch.compile(model, fullgraph=True)  # one_graph=True\ninput = torch.randn(10)\noutput = compiled_model(input)  # Potential issue if partial compilation occurs\n```\n\n```yaml\n- nn.Linear\n- torch.compile\n",
    "api": [
        "nn.Linear",
        "torch.compile"
    ]
}