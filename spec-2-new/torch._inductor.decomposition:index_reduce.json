{
    "summary": "\nThe index_reduce function performs reduction operations (like mean, sum, etc.) along a specified dimension using index-based grouping. The vulnerable line checks for mean reduction and atomic add limitations, which is important because:\n1. Mean reduction requires accurate accumulation for correct results\n2. Certain dtypes may not support atomic operations properly\n3. Precision loss can occur if atomic adds are not handled carefully\n4. The function needs to fall back to alternative implementations when atomic ops are unsafe\n```\n\n```python\nimport torch\n\nx = torch.randn(3, 3)\nindex = torch.tensor([0, 1, 0])\nsrc = torch.randn(3, 3)\n\n# Example triggering mean reduction\nresult = torch.index_reduce(x, dim=0, index=index, source=src, reduce='mean')\n```\n\n```yaml\n- torch.index_reduce\n- torch.Tensor.index_reduce_\n- torch.scatter_reduce\n- torch.Tensor.scatter_reduce_\n",
    "python_code": "\nimport torch\n\nx = torch.randn(3, 3)\nindex = torch.tensor([0, 1, 0])\nsrc = torch.randn(3, 3)\n\n# Example triggering mean reduction\nresult = torch.index_reduce(x, dim=0, index=index, source=src, reduce='mean')\n```\n\n```yaml\n- torch.index_reduce\n- torch.Tensor.index_reduce_\n- torch.scatter_reduce\n- torch.Tensor.scatter_reduce_\n",
    "api": [
        "torch.index_reduce",
        "torch.Tensor.index_reduce_",
        "torch.scatter_reduce",
        "torch.Tensor.scatter_reduce_"
    ]
}