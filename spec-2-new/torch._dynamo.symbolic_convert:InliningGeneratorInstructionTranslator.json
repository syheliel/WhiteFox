{
    "summary": "\nThe YIELD_VALUE and YIELD_FROM functions handle generator operations in PyTorch's symbolic execution. Key points:\n1. YIELD_VALUE appends yielded values to generated_items list for later iteration\n2. YIELD_FROM handles sub-generator iteration and exception cases\n3. Both functions are involved in generator control flow during tracing\n4. Vulnerabilities relate to missing quantization handling and exception security\n",
    "python_code": "\nimport torch\nimport torch.nn as nn\n\nclass GeneratorModel(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.linear = nn.Linear(10, 10)\n        \n    def forward(self, x):\n        for i in range(3):\n            yield self.linear(x + i)  # Triggers YIELD_VALUE\n            x = x * 0.5  # Modifies state between yields\n\nmodel = GeneratorModel()\ncompiled = torch.compile(model)\nfor output in compiled(torch.randn(10)):\n    print(output)  # Will trace through YIELD_VALUE and YIELD_FROM\n",
    "api": [
        "nn.Linear",
        "torch.compile",
        "torch.quantization.quantize_dynamic"
    ]
}