{
    "summary": "\nThe relu_compile_error_TESTING_ONLY function is a testing-only backend that intentionally raises a ReluCompileError when encountering ReLU operations in the graph. This is used for:\n1. Testing error handling and debugging capabilities\n2. Simulating compilation failures during development\n3. Validating error recovery mechanisms\n4. Testing repro extraction and minifier scripts\n```\n\n```python\nimport torch\n\ndef test_function(x):\n    return torch.relu(x)\n\n# This will trigger the ReluCompileError when used with the testing backend\ncompiled_fn = torch.compile(test_function, backend='relu_compile_error_TESTING_ONLY')\ninput = torch.randn(3)\noutput = compiled_fn(input)  # This will raise ReluCompileError\n```\n\n```yaml\n- torch.relu\n- torch.compile\n",
    "python_code": "\nimport torch\n\ndef test_function(x):\n    return torch.relu(x)\n\n# This will trigger the ReluCompileError when used with the testing backend\ncompiled_fn = torch.compile(test_function, backend='relu_compile_error_TESTING_ONLY')\ninput = torch.randn(3)\noutput = compiled_fn(input)  # This will raise ReluCompileError\n```\n\n```yaml\n- torch.relu\n- torch.compile\n",
    "api": [
        "torch.relu",
        "torch.compile"
    ]
}