
{
	"ts_compile": {
		"hints": [
			{
				"type": "precision",
				"target_line": "f = torch.jit.script(fx_g)",
				"func": "ts_compile",
				"note": "Using torch.jit.script may lose precision information compared to eager mode"
			},
			{
				"type": "argument_check",
				"target_line": "if not any(isinstance(t, torch._subclasses.FakeTensor) for t in inps):",
				"func": "ts_compile",
				"note": "No validation of input tensor shapes/dtypes against graph expectations"
			}
		]
	},
	"DebugInterpreter": {
		"hints": [
			{
				"type": "precision",
				"target_line": "assert nv.dtype == rv.dtype",
				"func": "DebugInterpreter.run_node",
				"note": "Strict dtype checking may fail for numerically equivalent types"
			},
			{
				"type": "quantization",
				"target_line": "if not isinstance(rv, torch.Tensor):",
				"func": "DebugInterpreter.run_node",
				"note": "No handling of quantized tensor types"
			}
		]
	},
	"memory_efficient_fusion": {
		"hints": [
			{
				"type": "argument_check",
				"target_line": "config.update(kwargs)",
				"func": "memory_efficient_fusion",
				"note": "No validation of kwargs against expected config options"
			}
		]
	},
	"_save_fx_default": {
		"hints": [
			{
				"type": "vulnerability",
				"target_line": "pickle.dump(input_meta, open(f\"{folder_name}/{current_name}/{current_name}_{type_name}_{graph_index}/{current_name}_{type_name}_{graph_index}.input\", \"wb\"))",
				"func": "_save_fx_default",
				"note": "Potential security issue with pickle file handling"
			},
			{
				"type": "argument_check",
				"target_line": "os.makedirs(f\"{folder_name}/{current_name}\", exist_ok=True)",
				"func": "_save_fx_default",
				"note": "No validation of folder_name path safety"
			}
		]
	},
	"get_inputs": {
		"hints": [
			{
				"type": "argument_check",
				"target_line": "with open(input_data_path, \"rb\") as f:",
				"func": "get_inputs",
				"note": "No validation of input file path or contents"
			},
			{
				"type": "precision",
				"target_line": "input = torch.randint(0, 1, shape, dtype=dtype, device=device)",
				"func": "get_inputs",
				"note": "Hardcoded range for integer types may not match actual use case"
			}
		]
	}
}
